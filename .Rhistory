# 3.2 加入版本控制（Git）
# 3.3 用 {renv} 进行依赖（加载包）的版本控制
renv::init()
renv::snapshot() # 保存当前所用的包环境
usethis::use_package(package = "renv", type = "Suggests")
?usethis::use_package
# 3.4 创建 README
usethis::use_readme_rmd()
# 3.5 编写函数
file.create("R/initial_file.R")
devtools::document() #写完后
library(Dbio)
initial_file("GSE5","D:/")
devtools::document() #写完后
devtools::document() #写完后
file.create("R/get_sample.R")
devtools::document() #写完后
# 3.2 加入版本控制（Git）
# 3.3 用 {renv} 进行依赖（加载包）的版本控制
renv::init() # 初始化环境
devtools::document() #写完后
library(Dbio)
devtools::document() #写完后
library(Dbio)
usethis::use_package(package = "Biobase", type = "Imports")
usethis::use_package(package = "GEOquery", type = "Imports")
library(Dbio)
